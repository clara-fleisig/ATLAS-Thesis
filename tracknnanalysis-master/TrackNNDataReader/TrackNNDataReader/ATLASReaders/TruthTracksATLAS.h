#ifndef NTAU__TRUTHTRACKSATLAS__H
#define NTAU__TRUTHTRACKSATLAS__H

/// Autogenerated code by NtupleBranchMgr on Mon Jul 10 04:25:45 2023


#include "NtupleAnalysisUtils/NTAUTopLevelIncludes.h"
#include <vector>
#include "TTree.h"

class TruthTracksATLAS: public NtupleBranchMgr{
    public:
        TruthTracksATLAS(TTree* t): NtupleBranchMgr(t){
            if(t) getMissedBranches(t);
        }
     /// List of branch members
        NtupleBranch <std::vector < Float_t>>       true_track_Pt{"true_track_Pt",   m_tree, this};
        NtupleBranch <std::vector < Float_t>>       true_track_Eta{"true_track_Eta",  m_tree, this};
        NtupleBranch <std::vector < Float_t>>       true_track_phi{"true_track_phi",  m_tree, this};
        NtupleBranch <std::vector < Int_t>>         true_track_pdgid{"true_track_pdgid",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         true_track_barcode{"true_track_barcode",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         true_track_status{"true_track_status",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         true_track_nClusters{"true_track_nClusters",m_tree, this};
        NtupleBranch <std::vector < std::vector<Int_t>>>true_track_clusterIndex{"true_track_clusterIndex",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         true_track_recoTrackIndex{"true_track_recoTrackIndex",m_tree, this};
        NtupleBranch <std::vector < Float_t>>       true_track_vertDistance{"true_track_vertDistance",m_tree, this};
};
#endif // NTAU__TRUTHTRACKSATLAS__H
