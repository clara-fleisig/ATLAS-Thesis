#ifndef NTAU__HTTOFFLINETREE__H
#define NTAU__HTTOFFLINETREE__H

/// Autogenerated code by NtupleBranchMgr on Mon Jul 10 04:53:34 2023


#include "NtupleAnalysisUtils/NTAUTopLevelIncludes.h"
#include <vector>
#include "TTree.h"

class HTTOfflineTree: public NtupleBranchMgr{
    public:
        HTTOfflineTree(TTree* t): NtupleBranchMgr(t){
            if(t) getMissedBranches(t);
        }
     /// List of branch members
        NtupleBranch <std::vector < Float_t>>       offline_d0{"offline_d0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       offline_z0{"offline_z0",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       offline_pt{"offline_pt",      m_tree, this};
        NtupleBranch <std::vector < Float_t>>       offline_eta{"offline_eta",     m_tree, this};
        NtupleBranch <std::vector < Float_t>>       offline_phi{"offline_phi",     m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_q{"offline_q",       m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_barcode{"offline_barcode", m_tree, this};
        NtupleBranch <std::vector < Float_t>>       offline_barcodefrac{"offline_barcodefrac",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_holes{"offline_n_holes", m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_inertmaterial{"offline_n_inertmaterial",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_measurement{"offline_n_measurement",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_brempoint{"offline_n_brempoint",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_scatterer{"offline_n_scatterer",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_perigee{"offline_n_perigee",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_outlier{"offline_n_outlier",m_tree, this};
        NtupleBranch <std::vector < Int_t>>         offline_n_other{"offline_n_other", m_tree, this};
};
#endif // NTAU__HTTOFFLINETREE__H
